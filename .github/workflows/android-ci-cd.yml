name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., 1.0.0)'
        required: false
        default: ''

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run unit tests
      run: ./gradlew test

    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        script: ./gradlew connectedAndroidTest

    - name: Run lint
      run: ./gradlew lint

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          **/build/reports/
          **/build/test-results/
          **/build/outputs/androidTest-results/

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode keystore
      run: |
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > keystore/kmcounty-release.keystore
      if: env.KEYSTORE_FILE != ''

    - name: Create keystore.properties
      run: |
        cat > keystore.properties << EOF
        storeFile=keystore/kmcounty-release.keystore
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        storeType=PKCS12
        v1SigningEnabled=true
        v2SigningEnabled=true
        EOF

    - name: Build release APK and AAB
      run: ./gradlew assembleRelease bundleRelease

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 30

    - name: Upload AAB artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-release-aab
        path: app/build/outputs/bundle/release/app-release.aab
        retention-days: 30

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Download APK artifact
      uses: actions/download-artifact@v3
      with:
        name: app-release-apk

    - name: Download AAB artifact
      uses: actions/download-artifact@v3
      with:
        name: app-release-aab

    - name: Generate changelog
      run: |
        # Generate changelog from git commits
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md

    - name: Generate checksums
      run: |
        sha256sum app-release.apk > checksums.sha256 || true
        sha256sum app-release.aab >> checksums.sha256 || true

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.release_version || 'latest' }}
        name: Release v${{ github.event.inputs.release_version || 'latest' }}
        body_path: CHANGELOG.md
        files: |
          app-release.apk
          app-release.aab
          checksums.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
