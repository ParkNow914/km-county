name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update version in build.gradle
      run: |
        sed -i "s/versionName = \".*\"/versionName = \"${{ steps.get_version.outputs.VERSION }}\"/" app/build.gradle.kts
        sed -i "s/versionCode = .*/versionCode = ${{ github.run_number }}/" app/build.gradle.kts

    - name: Create keystore from secrets
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
      if: ${{ secrets.KEYSTORE_BASE64 }}

    - name: Build release APK
      run: ./gradlew assembleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

    - name: Build release AAB
      run: ./gradlew bundleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Assistente R$/km v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## 🚀 Nova Versão v${{ steps.get_version.outputs.VERSION }}
          
          ### 📱 Instalação
          - **APK**: Baixe o arquivo `assistente-ridepricing-v${{ steps.get_version.outputs.VERSION }}.apk` abaixo
          - **AAB**: Para desenvolvedores ou publicação na Play Store
          
          ### 🔧 Alterações
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### ⚠️ Importante
          - Este app requer Android 6.0+ (API 23)
          - É necessário ativar as permissões de Acessibilidade e Overlay
          - Todo processamento é feito localmente - nenhum dado é enviado para servidores
          
          ### 🛡️ Segurança
          - Assinatura digital verificada
          - Código fonte aberto disponível neste repositório
          - Política de privacidade incluída no app
        draft: false
        prerelease: false

    - name: Upload APK to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: assistente-ridepricing-v${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload AAB to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/bundle/release/app-release.aab
        asset_name: assistente-ridepricing-v${{ steps.get_version.outputs.VERSION }}.aab
        asset_content_type: application/octet-stream

    - name: Create F-Droid metadata
      run: |
        mkdir -p fdroid/metadata
        cat > fdroid/metadata/com.kmcounty.ridepricing.yml << EOF
        Categories:
          - Navigation
          - Money
        License: MIT
        AuthorName: Assistente R$/km Team
        AuthorEmail: privacy@ridepriging.kmcounty.com
        WebSite: https://github.com/${{ github.repository }}
        SourceCode: https://github.com/${{ github.repository }}
        IssueTracker: https://github.com/${{ github.repository }}/issues
        
        AutoName: Assistente R$/km
        Summary: Analise preços de corridas em tempo real
        Description: |
          Aplicativo que monitora apps de transporte e calcula R$/km e R$/min para 
          ajudar na decisão de aceitar corridas. Funciona 100% offline, sem envio de 
          dados pessoais.
          
          Características:
          * Processamento local usando AccessibilityService
          * Filtros automáticos de PII (dados pessoais)
          * Overlay não-intrusivo com indicadores visuais
          * Código fonte aberto (MIT)
          * Compatível com LGPD
          
        RepoType: git
        Repo: https://github.com/${{ github.repository }}
        
        Builds:
          - versionName: '${{ steps.get_version.outputs.VERSION }}'
            versionCode: ${{ github.run_number }}
            commit: ${{ github.sha }}
            subdir: app
            gradle:
              - release
        EOF

    - name: Upload F-Droid metadata
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fdroid/metadata/com.kmcounty.ridepricing.yml
        asset_name: fdroid-metadata.yml
        asset_content_type: text/yaml

    - name: Clean up keystore
      run: rm -f keystore.jks
      if: always()
